// Code generated by goctl. DO NOT EDIT!
// Source: integration.proto

package server

import (
	"context"

	"catering/integration/rpc/internal/logic"
	"catering/integration/rpc/internal/svc"
	proto "catering/proto/integration"
)

type IntegrationHandlerServer struct {
	svcCtx *svc.ServiceContext
}

func NewIntegrationHandlerServer(svcCtx *svc.ServiceContext) *IntegrationHandlerServer {
	return &IntegrationHandlerServer{
		svcCtx: svcCtx,
	}
}

func (s *IntegrationHandlerServer) GetUserIntegrationChangeLogs(ctx context.Context, in *proto.GetUserIntegrationChangeLogsReq) (*proto.GetUserIntegrationChangeLogsResp, error) {
	l := logic.NewGetUserIntegrationChangeLogsLogic(ctx, s.svcCtx)
	return l.GetUserIntegrationChangeLogs(in)
}

func (s *IntegrationHandlerServer) GetUserVipLevelUpLogs(ctx context.Context, in *proto.GetUserVipLevelUpLogsReq) (*proto.GetUserVipLevelUpLogsResp, error) {
	l := logic.NewGetUserVipLevelUpLogsLogic(ctx, s.svcCtx)
	return l.GetUserVipLevelUpLogs(in)
}

func (s *IntegrationHandlerServer) ChangeUserIntegration(ctx context.Context, in *proto.ChangeUserIntegrationReq) (*proto.ChangeUserIntegrationResp, error) {
	l := logic.NewChangeUserIntegrationLogic(ctx, s.svcCtx)
	return l.ChangeUserIntegration(in)
}

func (s *IntegrationHandlerServer) GetUserVipInfo(ctx context.Context, in *proto.GetUserVipInfoReq) (*proto.GetUserVipInfoResp, error) {
	l := logic.NewGetUserVipInfoLogic(ctx, s.svcCtx)
	return l.GetUserVipInfo(in)
}
