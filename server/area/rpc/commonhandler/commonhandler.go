// Code generated by goctl. DO NOT EDIT!
// Source: area.proto

package commonhandler

import (
	"context"

	pb "catering/proto/common"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	City                   = pb.City
	Distinct               = pb.Distinct
	GetCitysReq            = pb.GetCitysReq
	GetCitysResp           = pb.GetCitysResp
	GetDistinctsReq        = pb.GetDistinctsReq
	GetDistinctsResp       = pb.GetDistinctsResp
	GetProvincesDetailReq  = pb.GetProvincesDetailReq
	GetProvincesDetailResp = pb.GetProvincesDetailResp
	GetProvincesReq        = pb.GetProvincesReq
	GetProvincesResp       = pb.GetProvincesResp
	Province               = pb.Province

	CommonHandler interface {
		GetProvinces(ctx context.Context, in *GetProvincesReq, opts ...grpc.CallOption) (*GetProvincesResp, error)
		GetCitys(ctx context.Context, in *GetCitysReq, opts ...grpc.CallOption) (*GetCitysResp, error)
		GetDistincts(ctx context.Context, in *GetDistinctsReq, opts ...grpc.CallOption) (*GetDistinctsResp, error)
		GetProvincesDetail(ctx context.Context, in *GetProvincesDetailReq, opts ...grpc.CallOption) (*GetProvincesDetailResp, error)
	}

	defaultCommonHandler struct {
		cli zrpc.Client
	}
)

func NewCommonHandler(cli zrpc.Client) CommonHandler {
	return &defaultCommonHandler{
		cli: cli,
	}
}

func (m *defaultCommonHandler) GetProvinces(ctx context.Context, in *GetProvincesReq, opts ...grpc.CallOption) (*GetProvincesResp, error) {
	client := pb.NewCommonHandlerClient(m.cli.Conn())
	return client.GetProvinces(ctx, in, opts...)
}

func (m *defaultCommonHandler) GetCitys(ctx context.Context, in *GetCitysReq, opts ...grpc.CallOption) (*GetCitysResp, error) {
	client := pb.NewCommonHandlerClient(m.cli.Conn())
	return client.GetCitys(ctx, in, opts...)
}

func (m *defaultCommonHandler) GetDistincts(ctx context.Context, in *GetDistinctsReq, opts ...grpc.CallOption) (*GetDistinctsResp, error) {
	client := pb.NewCommonHandlerClient(m.cli.Conn())
	return client.GetDistincts(ctx, in, opts...)
}

func (m *defaultCommonHandler) GetProvincesDetail(ctx context.Context, in *GetProvincesDetailReq, opts ...grpc.CallOption) (*GetProvincesDetailResp, error) {
	client := pb.NewCommonHandlerClient(m.cli.Conn())
	return client.GetProvincesDetail(ctx, in, opts...)
}
