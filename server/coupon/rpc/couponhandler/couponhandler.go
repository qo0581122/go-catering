// Code generated by goctl. DO NOT EDIT!
// Source: coupon.proto

package couponhandler

import (
	"context"

	proto "catering/proto/coupon"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Coupon            = proto.Coupon
	DrawCouponReq     = proto.DrawCouponReq
	DrawCouponResp    = proto.DrawCouponResp
	GetCouponInfoReq  = proto.GetCouponInfoReq
	GetCouponInfoResp = proto.GetCouponInfoResp
	GetUserCouponReq  = proto.GetUserCouponReq
	GetUserCouponResp = proto.GetUserCouponResp
	UseCouponReq      = proto.UseCouponReq
	UseCouponResp     = proto.UseCouponResp
	UserCoupon        = proto.UserCoupon

	CouponHandler interface {
		GetUserCoupon(ctx context.Context, in *GetUserCouponReq, opts ...grpc.CallOption) (*GetUserCouponResp, error)
		DrawCoupon(ctx context.Context, in *DrawCouponReq, opts ...grpc.CallOption) (*DrawCouponResp, error)
		GetCouponInfo(ctx context.Context, in *GetCouponInfoReq, opts ...grpc.CallOption) (*GetCouponInfoResp, error)
		UseCoupon(ctx context.Context, in *UseCouponReq, opts ...grpc.CallOption) (*UseCouponResp, error)
	}

	defaultCouponHandler struct {
		cli zrpc.Client
	}
)

func NewCouponHandler(cli zrpc.Client) CouponHandler {
	return &defaultCouponHandler{
		cli: cli,
	}
}

func (m *defaultCouponHandler) GetUserCoupon(ctx context.Context, in *GetUserCouponReq, opts ...grpc.CallOption) (*GetUserCouponResp, error) {
	client := proto.NewCouponHandlerClient(m.cli.Conn())
	return client.GetUserCoupon(ctx, in, opts...)
}

func (m *defaultCouponHandler) DrawCoupon(ctx context.Context, in *DrawCouponReq, opts ...grpc.CallOption) (*DrawCouponResp, error) {
	client := proto.NewCouponHandlerClient(m.cli.Conn())
	return client.DrawCoupon(ctx, in, opts...)
}

func (m *defaultCouponHandler) GetCouponInfo(ctx context.Context, in *GetCouponInfoReq, opts ...grpc.CallOption) (*GetCouponInfoResp, error) {
	client := proto.NewCouponHandlerClient(m.cli.Conn())
	return client.GetCouponInfo(ctx, in, opts...)
}

func (m *defaultCouponHandler) UseCoupon(ctx context.Context, in *UseCouponReq, opts ...grpc.CallOption) (*UseCouponResp, error) {
	client := proto.NewCouponHandlerClient(m.cli.Conn())
	return client.UseCoupon(ctx, in, opts...)
}
