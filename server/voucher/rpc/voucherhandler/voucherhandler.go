// Code generated by goctl. DO NOT EDIT!
// Source: voucher.proto

package voucherhandler

import (
	"context"

	proto "catering/proto/voucher"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DrawVoucherReq     = proto.DrawVoucherReq
	DrawVoucherResp    = proto.DrawVoucherResp
	GetUserVoucherReq  = proto.GetUserVoucherReq
	GetUserVoucherResp = proto.GetUserVoucherResp
	GetVoucherInfoReq  = proto.GetVoucherInfoReq
	GetVoucherInfoResp = proto.GetVoucherInfoResp
	UseVoucherReq      = proto.UseVoucherReq
	UseVoucherResp     = proto.UseVoucherResp
	Voucher            = proto.Voucher

	VoucherHandler interface {
		GetUserVoucher(ctx context.Context, in *GetUserVoucherReq, opts ...grpc.CallOption) (*GetUserVoucherResp, error)
		DrawVoucher(ctx context.Context, in *DrawVoucherReq, opts ...grpc.CallOption) (*DrawVoucherResp, error)
		GetVoucherInfo(ctx context.Context, in *GetVoucherInfoReq, opts ...grpc.CallOption) (*GetVoucherInfoResp, error)
		UseVoucher(ctx context.Context, in *UseVoucherReq, opts ...grpc.CallOption) (*UseVoucherResp, error)
	}

	defaultVoucherHandler struct {
		cli zrpc.Client
	}
)

func NewVoucherHandler(cli zrpc.Client) VoucherHandler {
	return &defaultVoucherHandler{
		cli: cli,
	}
}

func (m *defaultVoucherHandler) GetUserVoucher(ctx context.Context, in *GetUserVoucherReq, opts ...grpc.CallOption) (*GetUserVoucherResp, error) {
	client := proto.NewVoucherHandlerClient(m.cli.Conn())
	return client.GetUserVoucher(ctx, in, opts...)
}

func (m *defaultVoucherHandler) DrawVoucher(ctx context.Context, in *DrawVoucherReq, opts ...grpc.CallOption) (*DrawVoucherResp, error) {
	client := proto.NewVoucherHandlerClient(m.cli.Conn())
	return client.DrawVoucher(ctx, in, opts...)
}

func (m *defaultVoucherHandler) GetVoucherInfo(ctx context.Context, in *GetVoucherInfoReq, opts ...grpc.CallOption) (*GetVoucherInfoResp, error) {
	client := proto.NewVoucherHandlerClient(m.cli.Conn())
	return client.GetVoucherInfo(ctx, in, opts...)
}

func (m *defaultVoucherHandler) UseVoucher(ctx context.Context, in *UseVoucherReq, opts ...grpc.CallOption) (*UseVoucherResp, error) {
	client := proto.NewVoucherHandlerClient(m.cli.Conn())
	return client.UseVoucher(ctx, in, opts...)
}
